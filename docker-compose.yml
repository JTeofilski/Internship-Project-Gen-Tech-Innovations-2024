services:
  migration:
    image: 'cinema_img'
    build:
      context: .
    env_file:
      - .env
    command: ['npm', 'run', 'migration:run']
    networks:
      - project-network
    depends_on:
      db:
        condition: service_healthy
  backend:
    container_name: backend_container
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    networks:
      project-network:
    env_file:
      - .env
  db:
    container_name: db_container
    image: postgres:latest
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      project-network:
    volumes:
      - ./pg_db:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-q',
          '-d',
          '${POSTGRES_DB}',
          '-U',
          '${POSTGRES_USER}',
        ]
      interval: 5s
      timeout: 5s
      retries: 5
networks:
  project-network:
